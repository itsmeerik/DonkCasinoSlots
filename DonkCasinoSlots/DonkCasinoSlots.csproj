<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
    <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props"
            Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')"/>
    <PropertyGroup>
        <RootNamespace>DonkCasinoSlots</RootNamespace>
        <AssemblyName>DonkCasinoSlots</AssemblyName>
        <TargetFramework>net472</TargetFramework>
        <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
        <LangVersion>7.3</LangVersion>
        <FileAlignment>512</FileAlignment>
        <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
        <!-- Change these if your Steam path differs -->
        <GameRoot>C:\Program Files (x86)\Steam\steamapps\common\7 Days To Die</GameRoot>
        <Managed>$(GameRoot)\7DaysToDie_Data\Managed</Managed>

        <!-- Build directly into the game Mods folder -->
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)'=='Release'">
        <OutputPath>$(GameRoot)\Mods\DonkCasinoSlots\Harmony\</OutputPath>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
        <PlatformTarget>AnyCPU</PlatformTarget>
        <DebugSymbols>true</DebugSymbols>
        <DebugType>full</DebugType>
        <Optimize>false</Optimize>
        <OutputPath>bin\Debug\</OutputPath>
        <DefineConstants>DEBUG;TRACE</DefineConstants>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
        <PlatformTarget>AnyCPU</PlatformTarget>
        <DebugType>pdbonly</DebugType>
        <Optimize>true</Optimize>
        <OutputPath>bin\Release\</OutputPath>
        <DefineConstants>TRACE</DefineConstants>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
    </PropertyGroup>
    <PropertyGroup>
        <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
        <GenerateAssemblyInfo>false</GenerateAssemblyInfo> <!-- if you keep AssemblyInfo.cs -->
    </PropertyGroup>
    <ItemGroup>
        <Reference Include="System"/>
        <Reference Include="System.Core"/>
        <Reference Include="System.Data"/>
        <Reference Include="System.Xml"/>
    </ItemGroup>
    <ItemGroup>
        <Compile Include="CasinoSlotConfig.cs" />
        <Compile Include="CasinoSlotLogic.cs" />
        <Compile Include="ModEntry.cs" />
        <Compile Include="NetPackageCasinoSlotAction.cs" />
        <Compile Include="Properties\AssemblyInfo.cs"/>
        <Compile Include="Util.cs" />
    </ItemGroup>
    <ItemGroup>
        <Reference Include="0Harmony">
            <HintPath>$(GameRoot)\Mods\0_TFP_Harmony\0Harmony.dll</HintPath>
            <Private>false</Private>
        </Reference>
        <Reference Include="Assembly-CSharp">
            <HintPath>$(Managed)\Assembly-CSharp.dll</HintPath>
            <Private>false</Private>
        </Reference>
        <Reference Include="UnityEngine.CoreModule">
            <HintPath>$(Managed)\UnityEngine.CoreModule.dll</HintPath>
            <Private>false</Private>
        </Reference>
        <Reference Include="UnityEngine.AudioModule">
            <HintPath>$(Managed)\UnityEngine.AudioModule.dll</HintPath>
            <Private>false</Private>   <!-- Copy Local = False -->
        </Reference>
        <!-- Add more Unity modules if the compiler asks (examples): -->
        <!--
        <Reference Include="UnityEngine.PhysicsModule">
          <HintPath>$(Managed)\UnityEngine.PhysicsModule.dll</HintPath>
          <Private>false</Private>
        </Reference>
        <Reference Include="Platform">
          <HintPath>$(Managed)\Platform.dll</HintPath>
          <Private>false</Private>
        </Reference>
        -->
    </ItemGroup>
    <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets"/>
    <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
         Other similar extension points exist, see Microsoft.Common.targets.
    <Target Name="BeforeBuild">
    </Target>
    <Target Name="AfterBuild">
    </Target>
    -->

</Project>
